% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Aglm.r
\name{aglm}
\alias{aglm}
\title{Fitting generalized linear models with algebraic methods}
\usage{
aglm(model, data, family = poisson(), control = list(...), moves, ...)
}
\arguments{
\item{model}{model specification, either in terms of a configuration matrix or a symbolic
description of the model to be fitted}

\item{data}{data, as a data frame of raw data with ordinal discrete covariates}

\item{family}{a description of the error distirbution and link function used in the model}

\item{control}{a list of arguments that control the MCMC algorithm}

\item{moves}{the markov moves for the mcmc (as columns of a
matrix).}

\item{...}{...}
}
\value{
a list containing named elements \itemize{ \item
\code{steps}: an integer matrix whose columns represent
individual samples from the mcmc. \item \code{moves}: the moves
used for the proposal distribution in the mcmc, computed with
4ti2 (note that only the positive moves are given). \item
\code{acceptProb}: the average acceptance probability of the
moves, including the thinned moves. \item \code{call}: the call.
\item \code{obs}: the summarized data.
\item \code{A}: the sufficient
statistics computing matrix.
\item \code{sufficientStatistics}: The sufficient statistics of the model.
\item \code{p.value}: the exact p-values of individual tests,
accurate to Monte-Carlo error.  these are computed as the
proportion of samples with statistics equal to or larger than
the oberved statistic.
\item \code{mid.p.value}: the mid
p.values, see Agresti pp.20--21.
\item \code{sampsStats}:
the statistics computed for each mcmc
sample.
\item \code{cells}: the number of cells in the table. }
}
\description{
\code{\link[=aglm]{aglm()}} fits a generalized linear model to a dataset (typically a
contingency table) and performs an exact conditional test on the fitted model.
The exact test, which is a goodness-of-fit test, is performed via
Monte-Carlo sampling from the conditional distribution of the table
given the sufficient statistics of the model.  In short, inference
is drawn by comparing the statistic of the observed table (the unnormalized log-likelihood)
to those of the samples.  The proportion of sampled tables with equal to or
more extreme values than the observed table is the resulting p-value.
}
\examples{

 # simple poisson regression example from Diaconis et. al. 1998
 
 data <- data.frame(x = c(0,1,2,3,4), y = c(44,25,21,19,11))

 # perform the fitting
 fit_aglm <- aglm(y ~ x, data = data, family = poisson())

 # aglm gof p-value
 fit_aglm$p.value
 
 # compare with glm   
 fit_glm  <-  glm(y ~ x, data = data, family = poisson())
 
 # glm gof p-value
 1 - pchisq(fit_glm$deviance, fit_glm$df.residual)
 
 
 # logistic regression example with data from Haberman 1974
 
 # data in elongated format
 x <- c(rep(0,6),rep(1,2),rep(2,4),rep(3,9),rep(4,10),rep(5,20),
 rep(6,34),rep(7,42),rep(8,124),rep(9,58),rep(10,77),rep(11,95),
 rep(12,360))
 
 y <- c(rep(0,2),rep(1,10),rep(0,3),rep(1,6),rep(0,5),rep(1,5),
 rep(0,7),rep(1,13),rep(0,9),rep(1,25),rep(0,15),rep(1,27),rep(0,49),
 rep(1,75),rep(0,29),rep(1,29),rep(0,45),rep(1,32),rep(0,59),
 rep(1,36),rep(0,245),rep(1,115))
 
 data_aglm <- data.frame(x=x,y=y)
 data_glm <- data.frame(x = 0:12)
 data_glm$y <- cbind(c(4, 2, 4, 6, 5, 13, 25, 27, 75, 29, 32, 36, 115),
                     c(2, 0, 0, 3, 5, 7, 9, 15, 49, 29, 45, 59, 245))

 fit_aglm <- aglm(y ~ x, data = data_aglm, family = binomial())  
 fit_aglm$p.value  
 
 # compare to glm
 
 # special formatting of data needed for correct analysis
 data_glm <- data.frame(x = 0:12)
 data_glm$y <- cbind(c(4, 2, 4, 6, 5, 13, 25, 27, 75, 29, 32, 36, 115),
                     c(2, 0, 0, 3, 5, 7, 9, 15, 49, 29, 45, 59, 245))
                     
 fit_glm <-   glm(y ~ x, data = data_glm, family = binomial())
 1 - pchisq(fit_glm$deviance, fit_glm$df.residual)
 
 
 # multiple poisson regression 
 
 # create a fake dataset 
 b0 <- 1; b1 <- 0.5; b2 <- 0.5
 
 covariates <- expand.grid(1:3,1:4)
 
 data <- data.frame(
   x1 = covariates[,1],
   x2 = covariates[,2],
   y = rpois(12,exp(b0 + b1*covariates[,1] + b2*covariates[,2]))
 )
 
 # compare to glm
 
 fit_aglm <- aglm(y ~ x1 + x2, data = data, family = poisson())
 fit_glm  <-  glm(y ~ x1 + x2, data = data, family = poisson())
 
 fit_aglm$p.value
 with(fit_glm, 1 - pchisq(deviance, df.residual))
 
}
